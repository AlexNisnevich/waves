<!DOCTYPE html>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
		<title>Chronological Diagram of Asia</title>
    <script src='https://d3js.org/d3.v3.min.js'></script>
		<style type="text/css">
		.chart {
			shape-rendering: crispEdges;
		}

		.mini text {
			font: 9px sans-serif;
		}

		.main text {
			font: 12px sans-serif;
		}

		.miniItem0,.miniItem3,.miniItem6,.miniItem9,.miniItem12,.miniItem15,.miniItem18 {
			fill: darksalmon;
			stroke-width: 6;
		}

		.miniItem1,.miniItem4,.miniItem7,.miniItem10,.miniItem13,.miniItem16,.miniItem19 {
			fill: darkolivegreen;
			fill-opacity: .7;
			stroke-width: 6;
		}

		.miniItem2,.miniItem5,.miniItem8,.miniItem11,.miniItem14,.miniItem17,.miniItem20 {
			fill: slategray;
			fill-opacity: .7;
			stroke-width: 6;
		}

		.brush .extent {
			stroke: gray;
			fill: dodgerblue;
			fill-opacity: .365;
		}

		.axis {
		  font: 10px sans-serif;
		}

		.axis path,
		.axis line {
		  fill: none;
		  stroke: #000;
		  shape-rendering: crispEdges;
		}

		</style>
	</head>
	<body>
    <h1 style="text-align: center">ðŸŒŠðŸŒŠ <i>Waves</i> ðŸŒŠðŸŒŠ</h1>
    
		<script type="text/javascript">
		//data
		var lanes = [
      "Feminism", 
      "Coffee", 
      "Democracy",
      "Economic development",
      "Ska",
      "Emo",
      "Cognitive-behavioral therapy",
      "Russian emigration",
      "Charismatic Christianity",
      "Spanish flu",
      "European colonization",
      "Opioid epidemic in the U.S.",
      "Immigration to Canada",
      "Enlargement of the E.U.",
      "Walt Disney Treasures",
      "Jewish immigration to Palestine",
      "Serbian hip hop",
      "Anarcha-feminism",
      "Hong Kong New Wave",
      "",
    ];
    var laneLength = lanes.length;
		var items = [
        { "lane": 0, "id": "1st wave", "start": 1848 },
        { "lane": 0, "id": "2nd wave", "start": 1960 },
        { "lane": 0, "id": "3rd wave", "start": 1990 },
        { "lane": 0, "id": "4th wave", "start": 2012 },

        { "lane": 1, "id": "1st wave", "start": 1850 },
        { "lane": 1, "id": "2nd wave", "start": 1960 },
        { "lane": 1, "id": "3rd wave", "start": 1999 },
        
        { "lane": 2, "id": "1st wave", "start": 1828 },
        { "lane": 2, "id": "2nd wave", "start": 1945 },
        { "lane": 2, "id": "3rd wave", "start": 1974 },

        { "lane": 3, "id": "1st wave", "start": 1930 },
        { "lane": 3, "id": "2nd wave", "start": 1967 },
        { "lane": 3, "id": "3rd wave", "start": 1990 },

        { "lane": 4, "id": "1st wave", "start": 1957 },
        { "lane": 4, "id": "2nd wave", "start": 1970 },
        { "lane": 4, "id": "3rd wave", "start": 1989 },

        { "lane": 5, "id": "1st", "start": 1984 },
        { "lane": 5, "id": "2nd", "start": 1994 },
        { "lane": 5, "id": "3rd", "start": 2002 },
        { "lane": 5, "id": "4th", "start": 2007 },
        { "lane": 5, "id": "5th wave", "start": 2017 },

        { "lane": 6, "id": "1st wave", "start": 1920 },
        { "lane": 6, "id": "2nd wave", "start": 1967 },
        { "lane": 6, "id": "3rd wave", "start": 1980 },

        { "lane": 7, "id": "1st wave", "start": 1917 },
        { "lane": 7, "id": "2nd wave", "start": 1945 },
        { "lane": 7, "id": "3rd wave", "start": 1965 },
        { "lane": 7, "id": "4th wave", "start": 1991 },
        { "lane": 7, "id": "5th wave", "start": 2010 },

        { "lane": 8, "id": "1st wave", "start": 1901 },
        { "lane": 8, "id": "2nd wave", "start": 1960 },
        { "lane": 8, "id": "3rd wave", "start": 1982 },

        { "lane": 9, "id": "", "start": 1917 },
        { "lane": 9, "id": ".", "start": 1918 },
        { "lane": 9, "id": "..", "start": 1919 },
        { "lane": 9, "id": "(1st â€“ 4th waves)", "start": 1920 },

        { "lane": 10, "id": "<- 1st wave (1492)", "start": 1800 },
        { "lane": 10, "id": "2nd wave", "start": 1833 },

        { "lane": 11, "id": "1st wave", "start": 1990 },
        { "lane": 11, "id": "2", "start": 2010 },
        { "lane": 11, "id": "3", "start": 2013 },
        { "lane": 11, "id": "4th wave", "start": 2016 },

        { "lane": 12, "id": "<- (1600s)", "start": 1800 },
        { "lane": 12, "id": "2nd wave", "start": 1815 },
        { "lane": 12, "id": "3rd wave", "start": 1890 },
        { "lane": 12, "id": "4th wave", "start": 1940 },
        { "lane": 12, "id": "5th wave", "start": 1976 },

        { "lane": 13, "id": "1st", "start": 1973 },
        { "lane": 13, "id": "2nd", "start": 1981 },
        { "lane": 13, "id": "3rd", "start": 1986 },
        { "lane": 13, "id": "4th", "start": 1995 },
        { "lane": 13, "id": "5th", "start": 2004 },
        { "lane": 13, "id": "6th wave", "start": 2013 },

        { "lane": 14, "id": "1", "start": 2001 },
        { "lane": 14, "id": "2", "start": 2002 },
        { "lane": 14, "id": "3", "start": 2003 },
        { "lane": 14, "id": "4", "start": 2004 },
        { "lane": 14, "id": "5", "start": 2005 },
        { "lane": 14, "id": "6", "start": 2006 },
        { "lane": 14, "id": "7", "start": 2007 },
        { "lane": 14, "id": "8", "start": 2008 },
        { "lane": 14, "id": "9", "start": 2009 },

        { "lane": 15, "id": "1st wave", "start": 1881 },
        { "lane": 15, "id": "2nd wave", "start": 1904 },
        { "lane": 15, "id": "3rd", "start": 1919 },
        { "lane": 15, "id": "4th", "start": 1924 },
        { "lane": 15, "id": "5th wave", "start": 1929 },

        { "lane": 16, "id": "1st", "start": 1995 },
        { "lane": 16, "id": "2", "start": 2002 },
        { "lane": 16, "id": "3rd", "start": 2006 },
        { "lane": 16, "id": "4th wave", "start": 2014 },

        { "lane": 17, "id": "1st wave", "start": 1880 },
        { "lane": 17, "id": "2nd wave", "start": 1967 },
        { "lane": 17, "id": "3rd wave", "start": 1990 },
        { "lane": 17, "id": "4th wave", "start": 2012 },

        { "lane": 18, "id": "1st", "start": 1976 },
        { "lane": 18, "id": "2nd wave", "start": 1984 },
      ]

		items = items.map(v => {
      start = v.start;
			v.start = new Date(`${v.start < 10 ? "0" : ""}${v.start < 100 ? "00" : ""}${v.start}-01-01`)
			v.end = new Date(`${start}-10-31`)
			return v
		})

		timeBegin = new Date("1800")
		timeEnd = new Date("2040")

		</script>
		<script type="text/javascript">

		var m = [20, 15, 15, 185] //top right bottom left
		var w = 1780 - m[1] - m[3]
		var h = 800 - m[0] - m[2]
		var f = 20
		var mainHeight = h

		//scales
		var x = d3.time.scale()
			      .domain([timeBegin, timeEnd])
			      .range([0, w])

		var x1 = d3.time.scale()
			       .domain([timeBegin, timeEnd])
			       .range([0, w])

		var y1 = d3.scale.linear()
			       .domain([0, laneLength])
			       .range([0, mainHeight])

		var x1Axis = d3.svg.axis()
			           .scale(x1)
			           .orient("bottom")
			           .ticks(d3.time.years, 20)
			           .tickFormat(d3.time.format("%Y"))
			           .tickSize(5)
			           .tickPadding(1)

		var chart = d3.select("body")
			          .append("svg")
			          .attr("width", w + m[1] + m[3])
			          .attr("height", h + m[0] + m[2])
			          .attr("class", "chart")

		chart.append("defs").append("clipPath")
			 .attr("id", "clip")
			 .append("rect")
			 .attr("width", w)
			 .attr("height", mainHeight)

		var main = chart.append("g")
			            .attr("transform", `translate(${m[3]}, ${m[0]})`)
			            .attr("width", w)
			            .attr("height", mainHeight)
			            .attr("class", "main")

		var focus = main.append("g")
			           .attr("class", "focus")

		focus.append("g")
			 .attr("class", "x1 axis")
			 .call(x1Axis)

		//main lanes and texts
		main.append("g").selectAll(".laneLines")
			.data(items)
			.enter().append("line")
			.attr("x1", m[1])
			.attr("y1", d => y1(d.lane) + f)
			.attr("x2", w)
			.attr("y2", d => y1(d.lane) + f)
			.attr("stroke", "lightgray")

		main.append("g").selectAll(".laneText")
			.data(lanes)
			.enter().append("text")
			.text(d => d)
			.attr("x", -m[1])
			.attr("y", (d, i) => y1(i + .5) + f)
			.attr("dy", ".5ex")
			.attr("text-anchor", "end")
			.attr("class", "laneText")

		var itemRects = main.append("g")
			                .attr("clip-path", "url(#clip)")

		//brush
		var brush = d3.svg.brush()
			          .x(x)
			          .on("brush", display)

		display()

		function display() {

			var rects
			var labels
			var minExtent = brush.empty() ? x1.domain()[0] : brush.extent()[0]
			var maxExtent = brush.empty() ? x1.domain()[1] : brush.extent()[1]
			var visItems = items.filter(d => d.start < maxExtent && d.end > minExtent)

			x1.domain([minExtent, maxExtent])

			focus.select(".x1.axis").call(x1Axis)

			//update main item rects
			rects = itemRects.selectAll("rect")
			        .data(visItems, d => `${d.lane}-${d.id}`)
				.attr("x", d => x1(d.start))
				.attr("width", d => x1(d.end) - x1(d.start))

			rects.enter().append("rect")
				.attr("class", d => "miniItem" + d.lane)
				.attr("x", d => x1(d.start))
				.attr("y", d => y1(d.lane) + 6 + f)
				.attr("width", d => x1(d.end) - x1(d.start))
				.attr("height", d => .8 * y1(1))

			rects.exit().remove()

			//update the item labels
			labels = itemRects.selectAll("text")
				.data(visItems, d => `${d.lane}-${d.id}`)
				.attr("x", d => x1(Math.max(d.start, minExtent) + 2))

			labels.enter().append("text")
				.text(d => d.id)
				.attr("x", d => x1(Math.max(d.start, minExtent)) + 8)
				.attr("y", d => y1(d.lane + 1))
				.attr("text-anchor", "start")

			labels.exit().remove()

		}
		</script>
	</body>
</html>